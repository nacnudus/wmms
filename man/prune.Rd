% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prune.R
\name{prune}
\alias{prune}
\title{Prune or merge nodes according to their value vs bounds of the true maximum}
\usage{
prune(tree, bounds, dfs_env)
}
\arguments{
\item{`tree`}{(\code{environment}) The whole tree, originally created by
\code{\link[=tree_from_edges]{tree_from_edges()}}.}

\item{`bounds`}{A list of \code{low} and \code{high} numeric values between which the
true maximum value of the tree has been sought.  The bounds will initially
be \code{list(low = -Inf, high = Inf)}.}

\item{`dfs_env`}{(\code{environment}) An environment containing an object called
\code{dfs} that is a named list of \code{NULL} values, where the names are IDs of
nodes in depth-first order.  Obtained from \code{\link[=set_subtrees]{set_subtrees()}}.}
}
\value{
There is no return value. The tree is modified in place.
}
\description{
Whereas \code{value()} simulates greedily pruning the tree to obtain its maximum
possible value, this algorithm really prunes the tree, but only when it can
be proved that a node is not part of the maximum.  This is part of a process
that is repeated until the tree obtains its true maximum.
}
\details{
\itemize{
\item Leaf nodes whose value \code{a/b} is lower than \code{bounds$low} are pruned, because
they will not be part of the maximum.
\item Nodes (not only leaf nodes) whose value \code{a/b} is equal to or above
\code{bounds$low}, and below (but not equal to) \code{bounds$high}, are kept.  They
might yet be part of the maximum.
\item Nodes (not only leaf nodes) whose value \code{a/b} is above \code{bounds$high} are
'merged' into their parent, because they will be part of the maximum.
\item If a non-leaf node's value \code{a/b} is lower than \code{bounds$low}, and it has
exactly one child, then merge the child into this node, and reapply all
these rules, because its value \code{a/b} has changed and it might now be a
leaf, or have acquired more than one child.  If the only child exists, it
is because its value \code{a/b} is between the bounds, and might be high enough
to compensate for its parent's low value.
}

To 'merge' a node into is parent:
\enumerate{
\item Add the node's value \code{a} to the parent's value \code{a}
\item Add the node's value \code{b} to the parent's value \code{b}
\item Make any children of the node children of the parent instead.  Such
children exist when their values \code{a/b} are between the bounds, so they
have neither been pruned, nore been merged into their parent.
}

Once a child has been pruned, it is no longer included in the \code{children}
environment of its parent.  However, the \code{parent} object of the child still
links to the parent, so it is still possible to know which child belonged to
which parent in the original tree.  The child still exists because it is
still in the the environment that is the overall tree.  It just won't be
reached from the root node.
}
